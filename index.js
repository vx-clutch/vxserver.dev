const programs = [
  "yait",
];

function getProgramOfTheDay(arr) {
  const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD
  let hash = 0;
  for (let i = 0; i < today.length; i++) {
    hash = (hash * 31 + today.charCodeAt(i)) % arr.length;
  }
  return arr[hash];
}

const programOfTheDay = getProgramOfTheDay(programs);
const potd = document.getElementById("potd")
potd.textContent = programOfTheDay;
potd.href = `https://github.com/vx-clutch/${programOfTheDay}`

async function updateRecentRelease() {
  const recentReleaseElem = document.getElementById("recent-release");
  if (!recentReleaseElem) return;
  recentReleaseElem.textContent = "Loadingâ€¦";

  // Try to fetch the static JSON file generated by the GitHub Actions workflow
  try {
    // Use relative paths for compatibility with GitHub Pages and local/dev
    let res = await fetch("recent-release.json");
    if (!res.ok) {
      // fallback for public/ fetch (e.g., if deployed with public dir)
      res = await fetch("/public/recent-release.json");
    }
    if (!res.ok) throw new Error("No recent release data found.");
    const data = await res.json();
    if (data.error) {
      recentReleaseElem.textContent = data.error;
      return;
    }
    if (data && data.name && data.commitDate && data.commitUrl && data.url) {
      const date = new Date(data.commitDate).toLocaleString();
      recentReleaseElem.innerHTML = `<a href="${data.url}" target="_blank">${data.name}</a> - <a href="${data.commitUrl}" target="_blank">latest commit</a> (${date})`;
    } else {
      recentReleaseElem.textContent = "No recent commits found.";
    }
  } catch (e) {
    recentReleaseElem.textContent = `Error loading recent release. ${e.message ? e.message : ''}`;
  }
}

updateRecentRelease();
